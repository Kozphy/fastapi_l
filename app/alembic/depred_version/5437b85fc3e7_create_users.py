"""create users

Revision ID: 5437b85fc3e7
Revises: 
Create Date: 2022-07-15 07:04:34.056972

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision = "5437b85fc3e7"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users_country",
        sa.Column(
            "id",
            sa.BigInteger(),
            sa.Identity(always=False),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("country", sa.VARCHAR(length=255), nullable=False),
        sa.Column("country_code", sa.VARCHAR(length=10), nullable=False),
        sa.Column(
            "last_update",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "users_status",
        sa.Column(
            "id",
            sa.BigInteger(),
            sa.Identity(always=False),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column(
            "activate", sa.Boolean(), server_default=sa.text("false"), nullable=False
        ),
        sa.Column(
            "forbidden", sa.Boolean(), server_default=sa.text("false"), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "users",
        sa.Column(
            "id",
            sa.BigInteger(),
            sa.Identity(always=False),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("account", sa.VARCHAR(length=50), nullable=False),
        sa.Column("password", sa.VARCHAR(length=100), nullable=False),
        sa.Column("surname", sa.VARCHAR(length=30), server_default="", nullable=False),
        sa.Column(
            "given_name", sa.VARCHAR(length=50), server_default="", nullable=False
        ),
        sa.Column("description", sa.TEXT(), nullable=True),
        sa.Column(
            "user_status_id", sa.BigInteger(), server_default="0", nullable=False
        ),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "forbidden_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("NULL"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["user_status_id"], ["users_status.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("account"),
    )
    op.create_table(
        "users_address",
        sa.Column(
            "id",
            sa.BigInteger(),
            sa.Identity(always=False),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("users_id", sa.BigInteger(), nullable=False),
        sa.Column("user_country_id", sa.BigInteger(), nullable=False),
        sa.Column("city", sa.VARCHAR(length=255), nullable=False),
        sa.Column("region", sa.VARCHAR(length=255), nullable=False),
        sa.Column("address1", sa.VARCHAR(length=255), nullable=False),
        sa.Column("address2", sa.VARCHAR(length=255), nullable=False),
        sa.Column("address3", sa.VARCHAR(length=255), nullable=False),
        sa.Column("zip_code", sa.VARCHAR(length=6), nullable=False),
        sa.Column(
            "last_update",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["user_country_id"], ["users_country.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["users_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "users_email",
        sa.Column(
            "id",
            sa.BigInteger(),
            sa.Identity(always=False),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("users_id", sa.BigInteger(), nullable=False),
        sa.Column("email", sa.VARCHAR(length=50), nullable=False),
        sa.Column(
            "last_update",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(["users_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "users_id_card_in_formosa",
        sa.Column(
            "id",
            sa.BigInteger(),
            sa.Identity(always=False),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("users_id", sa.BigInteger(), nullable=False),
        sa.Column("user_country_id", sa.BigInteger(), nullable=False),
        sa.Column(
            "gender",
            postgresql.ENUM(
                "Not_known",
                "Male",
                "Female",
                "Not_aplicable",
                name="gender",
                create_type=False,
            ),
            nullable=False,
        ),
        sa.Column("formosa_id_card_letter", sa.VARCHAR(length=1), nullable=False),
        sa.Column("formosa_id_card", sa.VARCHAR(length=9), nullable=False),
        sa.Column("issuance_type", sa.VARCHAR(length=3), nullable=False),
        sa.Column("issuance_date", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("description", sa.TEXT(), nullable=True),
        sa.Column(
            "last_update",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["user_country_id"], ["users_country.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["users_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("formosa_id_card_letter", "formosa_id_card"),
    )
    op.create_table(
        "users_phone",
        sa.Column(
            "id",
            sa.BigInteger(),
            sa.Identity(always=False),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column("user_country_id", sa.BigInteger(), nullable=False),
        sa.Column("subscriber_number", sa.VARCHAR(length=15), nullable=False),
        sa.Column(
            "last_update",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["user_country_id"], ["users_country.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("users_phone")
    op.drop_table("users_id_card_in_formosa")
    op.drop_table("users_email")
    op.drop_table("users_address")
    op.drop_table("users")
    op.drop_table("users_status")
    op.drop_table("users_country")
    # ### end Alembic commands ###
